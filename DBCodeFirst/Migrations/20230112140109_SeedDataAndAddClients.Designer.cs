// <auto-generated />
using System;
using DBCodeFirst.Contextes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBCodeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230112140109_SeedDataAndAddClients")]
    partial class SeedDataAndAddClients
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBCodeFirst.Clients.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Caracteristic")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Caracteristic");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.HasKey("ClientId");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Caracteristic = "He is A",
                            DateOfBirth = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6708),
                            FirstName = "A",
                            LastName = "B"
                        },
                        new
                        {
                            ClientId = 2,
                            Caracteristic = "He is B",
                            DateOfBirth = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6714),
                            FirstName = "B",
                            LastName = "B"
                        },
                        new
                        {
                            ClientId = 3,
                            DateOfBirth = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6718),
                            FirstName = "C",
                            LastName = "C"
                        },
                        new
                        {
                            ClientId = 4,
                            Caracteristic = "He is D",
                            DateOfBirth = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6721),
                            FirstName = "D",
                            LastName = "B"
                        },
                        new
                        {
                            ClientId = 5,
                            DateOfBirth = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6724),
                            FirstName = "E",
                            LastName = "B"
                        });
                });

            modelBuilder.Entity("DBCodeFirst.EmployeeProjects.EmployeeProject", b =>
                {
                    b.Property<int>("EmployeeProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeProjectId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeProjectId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StarteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StarteDate");

                    b.HasKey("EmployeeProjectId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeProjectId = 1,
                            EmployeeId = 1,
                            ProjectId = 1,
                            Rate = 0m,
                            StarteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeProjectId = 2,
                            EmployeeId = 1,
                            ProjectId = 2,
                            Rate = 0m,
                            StarteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeProjectId = 3,
                            EmployeeId = 1,
                            ProjectId = 3,
                            Rate = 0m,
                            StarteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeProjectId = 4,
                            EmployeeId = 1,
                            ProjectId = 4,
                            Rate = 0m,
                            StarteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeProjectId = 5,
                            EmployeeId = 1,
                            ProjectId = 5,
                            Rate = 0m,
                            StarteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DBCodeFirst.Employees.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("HiredDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("OfficeId");

                    b.Property<int>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("TitleId");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Slavick",
                            HiredDate = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6654),
                            LastName = "Crumn",
                            OfficeId = 1,
                            TitleId = 1
                        });
                });

            modelBuilder.Entity("DBCodeFirst.Offices.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfficeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Location");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("OfficeId");

                    b.ToTable("Office", (string)null);

                    b.HasData(
                        new
                        {
                            OfficeId = 1,
                            Location = "New York",
                            Title = "MMM"
                        });
                });

            modelBuilder.Entity("DBCodeFirst.Projects.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Budget");

                    b.Property<int>("CLientId")
                        .HasColumnType("int")
                        .HasColumnName("CLientId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartedDate");

                    b.HasKey("ProjectId");

                    b.HasIndex("CLientId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 100m,
                            CLientId = 1,
                            Name = "A",
                            StartedDate = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6730)
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 110m,
                            CLientId = 2,
                            Name = "B",
                            StartedDate = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6734)
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 110m,
                            CLientId = 3,
                            Name = "C",
                            StartedDate = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6737)
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 200m,
                            CLientId = 4,
                            Name = "D",
                            StartedDate = new DateTime(2023, 1, 12, 16, 1, 8, 994, DateTimeKind.Local).AddTicks(6740)
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 90m,
                            CLientId = 5,
                            Name = "E",
                            StartedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DBCodeFirst.Titles.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TitleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("TitleId");

                    b.ToTable("Title", (string)null);

                    b.HasData(
                        new
                        {
                            TitleId = 1,
                            Name = "T"
                        });
                });

            modelBuilder.Entity("DBCodeFirst.EmployeeProjects.EmployeeProject", b =>
                {
                    b.HasOne("DBCodeFirst.Employees.Employee", "Employee")
                        .WithMany("Projects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBCodeFirst.Projects.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DBCodeFirst.Employees.Employee", b =>
                {
                    b.HasOne("DBCodeFirst.Offices.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBCodeFirst.Titles.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("DBCodeFirst.Projects.Project", b =>
                {
                    b.HasOne("DBCodeFirst.Clients.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("CLientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DBCodeFirst.Clients.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("DBCodeFirst.Employees.Employee", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("DBCodeFirst.Offices.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DBCodeFirst.Projects.Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("DBCodeFirst.Titles.Title", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
